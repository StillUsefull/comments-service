version: '3.5'

services:
  postgres_comments:
    container_name: postgres_comments_container
    build: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-123456}
      POSTGRES_DB: ${POSTGRES_DB:-postgres_db}
      PGDATA: ${PGDATA:-/data/postgres}
    volumes:
      - postgres_comments:${PGDATA:-/data/postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - postgres_comments
    restart: unless-stopped

  comments_service:
    container_name: comments_service_container
    build: ..
    environment:
      POSTGRES_URL:
      MONGODB_URL:
      REDIS_HOST:
      REDIS_PORT:
      JWT_SECRET:
      JWT_TTL:
      IS_PROD: false
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_REGION:
      AWS_S3_BUCKET_NAME:
      RABBIT_URL:
      RABBIT_QUEUE: 
    depends_on:
      - postgres_comments
      - redis
      - rabbitmq
    ports:
      - "3000:3000"
    networks:
      - postgres_comments
      - redis
      - rabbitmq
    restart: unless-stopped

  redis:
    container_name: redis_container
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - redis
    restart: unless-stopped

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq
    restart: unless-stopped

networks:
  postgres_comments:
    driver: bridge
  redis:
    driver: bridge
  rabbitmq:
    driver: bridge

volumes:
    postgres_comments: